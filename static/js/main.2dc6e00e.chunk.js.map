{"version":3,"sources":["ColoredMap.tsx","CountryNameIDtable.tsx","DateSlider.tsx","ColorLegendVertical.tsx","CovidMap.tsx","index.tsx"],"names":["ColoredMap","props","basicMapProps","pathGenerator","defaultStrokeWidth","coloredStrokeWidth","this","renderBasicMap","colorScale","worldData","selector","selectAll","data","d","countryId","join","attr","countryGeo","infected","text","properties","name","range","projection","worldGeo","countryColor","sphereColor","d3","mapG","type","countryNameIDtable","formatDate","DateSlider","timeScale","handle","handleText","playInterWidth","cursorMoving","buttonTimer","currentCursorWidth","buttonPlayColor","buttonPauseColor","initDateSlider","bind","updateDateSlider","domain","startDate","endDate","sliderWidth","clamp","buttonG","style","on","select","transition","clearInterval","setInterval","playButtonStep","invert","h","onSliderDragged","trackOverlay","call","interrupt","x","nDays","Math","floor","getTime","insert","tickOffset","ticks","handleRadius","append","handleTextOffset","id","Component","ColorLegendVertical","backgroundWidth","backgroundHeight","barMargin","top","left","barWidth","barHeight","fontsize","colorLegendVerticalG","background","gradientLegend","clickableLegend","clickedDomain","colorScaleMax","gradientData","offset","i","currNum","push","number","color","clickableG","clickableRanges","interval","length","ticksGroups","onClick","buttonWidth","topojson","require","CovidMap","state","sliderProps","undefined","dataDownloaded","worldCovid","Map","coloredMap","colorNonInfacted","drawBasicMapSVG","getWorldData","date","getUTCDate","getUTCMonth","Promise","all","worldTopo","feature","objects","countries","features","forEach","day","Date","set","constructWorldCovidKey","isNullOrUndefined","createColorScale","logScale","svg","classed","zoomG","scale","map","colorLegendG","colorLegend","hilightingMap","colorMapByDay","zoom","scaleExtent","transform","setState","todayWorldCovid","get","combineWordGeoAndCovid","coloringMap","Object","keys","country","countryData","Number","Array","from","values","ReactDOM","render","className","document","getElementById"],"mappings":"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","file":"static/js/main.2dc6e00e.chunk.js","sourcesContent":["import * as d3 from 'd3';\r\nimport './ColoredMap.css';\r\nimport { IWorldData } from './CovidMap';\r\n\r\nexport interface IBasicMap {\r\n  selector: any;\r\n  projection: any;\r\n  worldGeo: any;\r\n  countryColor: string;\r\n  sphereColor: string;\r\n}\r\n\r\nexport class ColoredMap {\r\n  basicMapProps: IBasicMap;\r\n  pathGenerator: any;\r\n\r\n  defaultStrokeWidth = '0.02px';\r\n  coloredStrokeWidth = '0.3px';\r\n\r\n  constructor(props: IBasicMap) {\r\n    this.basicMapProps = props;\r\n    this.renderBasicMap(this.basicMapProps);\r\n  }\r\n\r\n  coloringMap(colorScale: any, worldData: IWorldData[]) {\r\n    const mapG = this.basicMapProps.selector;\r\n\r\n    const countries = mapG\r\n      .selectAll('.country')\r\n      .data(worldData, (d: IWorldData) => d.countryId)\r\n      .join('path')\r\n        .attr('class', 'country')\r\n        .attr('d', (d: IWorldData) => this.pathGenerator(d.countryGeo))\r\n        .attr('fill', (d: IWorldData) => colorScale(d.infected))\r\n        .attr('stroke-width', (d: IWorldData) => d.infected === 0 ? this.defaultStrokeWidth : this.coloredStrokeWidth);\r\n\r\n    countries.selectAll('title').data((d: any) => [d]).join('title')\r\n      .text((d: any) => `${d.countryGeo.properties.name}: ${d.infected}`); // set hover text\r\n  }\r\n\r\n  hilightingMap( range: [number, number] | null) {\r\n    const mapG = this.basicMapProps.selector;\r\n\r\n    const countries = mapG.selectAll('.country')\r\n      .attr('opacity', (d: IWorldData) => {\r\n        if (range === null) {\r\n          return 1;\r\n        }\r\n        if (d.infected >= range[0] && d.infected <= range[1]) {\r\n          return 1;\r\n        } else {\r\n          return 0.2;\r\n        }\r\n      });\r\n  }\r\n\r\n  renderBasicMap(props: IBasicMap) {\r\n    const {selector, projection, worldGeo, countryColor, sphereColor} = props;\r\n\r\n    // map generator\r\n    const pathGenerator = d3.geoPath(projection);\r\n    this.pathGenerator = pathGenerator;\r\n\r\n    // draw sphere to the map\r\n    const mapG = selector;\r\n    mapG.selectAll('.sphere').data([null]).join('path')\r\n      .attr('class', 'sphere')\r\n      .attr('d', (d: any) => pathGenerator({ type: 'Sphere' }))\r\n      .attr('fill', sphereColor);\r\n\r\n    const countries = mapG.selectAll('.country').data(worldGeo).join('path')\r\n      .attr('class', 'country')\r\n      .attr('d', (d: any) => pathGenerator(d))\r\n      .attr('fill', countryColor)\r\n      .attr('stroke-width', this.defaultStrokeWidth);\r\n\r\n    countries.selectAll('title').data((d: any) => [d]).join('title')\r\n      .text((d: any) => `${d.properties.name}`); // set hover text\r\n\r\n    return mapG;\r\n  }\r\n\r\n}\r\n","export const countryNameIDtable = {\n  'date': null,\n  'Andorra': null,\n  'Bahrain': null,\n  'Saint Barthlemy': null,\n  'Saint Vincent and the Grenadines': null,\n  'Worldwide': null,\n  'Gibraltar': null,\n  'Guernsey': null,\n  'French Guiana': null,\n  'International': null,\n  'Faeroe Islands': null,\n  'Jersey': null,\n  'Liechtenstein': null,\n  'Maldives': null,\n  'Malta': null,\n  'San Marino': null,\n  'Saint Martin (French part)': null,\n  'Martinique': null,\n  'Monaco': null,\n  'French Polynesia': null,\n  'Reunion': null,\n  'Singapore': null,\n  'Vatican': null,\n  'Afghanistan': '004',\n  'South Africa': '710',\n  'Albania': '008',\n  'Algeria': '012',\n  'Bosnia and Herzegovina': '070',\n  'United Arab Emirates': '784',\n  'Saudi Arabia': '682',\n  'Argentina': '032',\n  'Armenia': '051',\n  'Australia': '036',\n  'Austria': '040',\n  'Azerbaijan': '031',\n  'Bangladesh': '050',\n  'Belarus': '112',\n  'Belgium': '056',\n  'Bhutan': '064',\n  'Bolivia': '068',\n  'Brazil': '076',\n  'Brunei': '096',\n  'Bulgaria': '100',\n  'Cambodia': '116',\n  'Cameroon': '120',\n  'Canada': '124',\n  'Chile': '152',\n  'China': '156',\n  'Colombia': '170',\n  'Croatia': '191',\n  'Cuba': '192',\n  'Cyprus': '196',\n  'Cote d\\'Ivoire': '384',\n  'Denmark': '208',\n  'Ecuador': '218',\n  'Egypt': '818',\n  'Estonia': '233',\n  'Burkina Faso': '854',\n  'Finland': '246',\n  'France': '250',\n  'Georgia': '268',\n  'Germany': '276',\n  'Greece': '300',\n  'Guyana': '328',\n  'Honduras': '340',\n  'Hungary': '348',\n  'Iceland': '352',\n  'India': '356',\n  'Indonesia': '360',\n  'Iran': '364',\n  'Iraq': '368',\n  'Ireland': '372',\n  'Israel': '376',\n  'Italy': '380',\n  'Jamaica': '388',\n  'Japan': '392',\n  'Jordan': '400',\n  'United Kingdom': '826',\n  'South Korea': '410',\n  'Kuwait': '414',\n  'Sri Lanka': '144',\n  'Latvia': '428',\n  'Lebanon': '422',\n  'Lithuania': '440',\n  'Luxembourg': '442',\n  'Macedonia': '807',\n  'Malaysia': '458',\n  'Mexico': '484',\n  'Moldova': '498',\n  'Mongolia': '496',\n  'Morocco': '504',\n  'Nepal': '524',\n  'Netherlands': '528',\n  'Nigeria': '566',\n  'Norway': '578',\n  'Oman': '512',\n  'Pakistan': '586',\n  'Palestine': '275',\n  'Panama': '591',\n  'Paraguay': '600',\n  'Peru': '604',\n  'Philippines': '608',\n  'Poland': '616',\n  'Portugal': '620',\n  'Qatar': '634',\n  'Czech Republic': '203',\n  'Democratic Republic of Congo': '180',\n  'Dominican Republic': '214',\n  'Costa Rica': '188',\n  'Romania': '642',\n  'Russia': '643',\n  'Senegal': '686',\n  'Serbia': '688',\n  'Slovakia': '703',\n  'Slovenia': '705',\n  'Spain': '724',\n  'United States': '840',\n  'Sweden': '752',\n  'Switzerland': '756',\n  'Thailand': '764',\n  'Togo': '768',\n  'Tunisia': '788',\n  'Turkey': '792',\n  'Ukraine': '804',\n  'Vietnam': '704',\n  'New Zealand': '554',\n};\n\nexport function prop<T, K extends keyof T>(obj: T, key: K) {\n  return obj[key];\n}\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './DateSlider.css';\r\n\r\nconst formatDate = d3.timeFormat('%d %b');\r\n\r\nexport interface IDateSliderProps {\r\n  selector: any;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  sliderWidth: number;\r\n  tickOffset: number;\r\n  handleRadius: number;\r\n  handleTextOffset: number;\r\n  onSliderDragged: (date: Date) => void;\r\n}\r\n\r\nexport class DateSlider extends Component<IDateSliderProps, {}>  {\r\n  // used by slider\r\n  timeScale: any;\r\n  handle: any;\r\n  handleText: any;\r\n\r\n  // used by play button\r\n  playInterWidth: any;\r\n  cursorMoving = false;\r\n  buttonTimer: any;\r\n  currentCursorWidth = 0;\r\n\r\n  buttonPlayColor = '#cb1c1ede';\r\n  buttonPauseColor = '#696969';\r\n\r\n  constructor(props: Readonly<IDateSliderProps>) {\r\n    super(props);\r\n\r\n    this.initDateSlider.bind(this);\r\n    this.updateDateSlider.bind(this);\r\n\r\n    const timeScale = d3\r\n      .scaleTime()\r\n      .domain([this.props.startDate, this.props.endDate])\r\n      .range([0, this.props.sliderWidth])\r\n      .clamp(true);\r\n    this.timeScale = timeScale;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const buttonG = this.props.selector\r\n      .selectAll('.button').data([null]).join('g')\r\n        .attr('class', 'button');\r\n    buttonG\r\n      .selectAll('rect').data([null]).join('rect')\r\n        .attr('height', '50')\r\n        .attr('width', '120')\r\n        .attr('x', '0')\r\n        .attr('y', '0')\r\n        .attr('rx', '10')\r\n        .attr('transform', 'translate(-150, -30)')\r\n        .attr('fill', this.buttonPlayColor);\r\n    buttonG\r\n      .selectAll('text').data([null]).join('text')\r\n        .attr('fill', 'white')\r\n        .attr('transform', 'translate(-90, 5)')\r\n        .style('text-anchor', 'middle')\r\n        .text('Play');\r\n\r\n    buttonG\r\n      .on('mouseover', () => {\r\n        buttonG.select('rect').transition().attr('fill', this.buttonPauseColor);\r\n      })\r\n      .on('mouseout', () => {\r\n        if (buttonG.text() === 'Play') {\r\n          buttonG.select('rect').transition().attr('fill', this.buttonPlayColor);\r\n        }\r\n      });\r\n\r\n    buttonG.on('click', () => {\r\n      if (buttonG.text() === 'Pause') {\r\n        this.cursorMoving = false;\r\n        clearInterval(this.buttonTimer);\r\n        buttonG.select('rect').transition().attr('fill', this.buttonPlayColor);\r\n        buttonG.select('text').transition().text('Play');\r\n      } else {\r\n        this.cursorMoving = true;\r\n        this.buttonTimer = setInterval(playButtonStep, 100);\r\n        buttonG.select('rect').transition().attr('fill', this.buttonPauseColor);\r\n        buttonG.select('text').transition().text('Pause');\r\n      }\r\n    });\r\n\r\n    const playButtonStep = () => {\r\n      this.updateDateSlider(this.timeScale.invert(this.currentCursorWidth));\r\n      this.currentCursorWidth += this.playInterWidth; // move 1 tick per step\r\n      if (this.currentCursorWidth > this.props.sliderWidth + this.playInterWidth) {\r\n        this.cursorMoving = false;\r\n        this.currentCursorWidth = 0;\r\n        clearInterval(this.buttonTimer);\r\n        // timer = 0;\r\n        buttonG.select('rect').transition().attr('fill', this.buttonPlayColor);\r\n        buttonG.select('text').transition().text('Play');\r\n      }\r\n    };\r\n\r\n    this.initDateSlider();\r\n  }\r\n\r\n  updateDateSlider (h: Date) {\r\n    // update position and text of label according to slider scale\r\n    this.handle\r\n      .attr('cx', this.timeScale(h));\r\n    this.handleText\r\n      .attr('x', this.timeScale(h))\r\n      .text(formatDate(h));\r\n\r\n    this.props.onSliderDragged(h);\r\n  }\r\n\r\n  initDateSlider () {\r\n    const selector = this.props.selector;\r\n\r\n    selector.selectAll('.track').data([null]).join('line')\r\n      .attr('class', 'track');\r\n    selector.selectAll('.track-inset').data([null]).join('line')\r\n      .attr('class', 'track-inset');\r\n    const trackOverlay = selector.selectAll('.track-overlay').data([null]).join('line')\r\n      .attr('class', 'track-overlay');\r\n    selector.selectAll('line')\r\n      .attr('x1', this.timeScale.range()[0])\r\n      .attr('x2', this.timeScale.range()[1]);\r\n\r\n    trackOverlay.call(\r\n      d3.drag()\r\n        .on('start.interrupt', () => selector.interrupt())\r\n        .on('start drag', () => {\r\n          this.currentCursorWidth = d3.event.x;\r\n          this.updateDateSlider(this.timeScale.invert(this.currentCursorWidth));\r\n        }),\r\n    );\r\n\r\n    // draw ticks, one per week\r\n    const nDays = Math.floor((this.props.endDate.getTime() - this.props.startDate.getTime())\r\n      / (1000 * 60 * 60 * 24 * 7));\r\n    this.playInterWidth = this.props.sliderWidth / ((nDays + 1) * 7);\r\n    selector\r\n      .insert('g', '.track-overlay')\r\n        .attr('class', 'ticks')\r\n        .attr('transform', `translate(0, ${this.props.tickOffset})`)\r\n        .selectAll('text')\r\n        .data(this.timeScale.ticks(nDays))\r\n        .join('text')\r\n          .attr('x', this.timeScale)\r\n          .attr('y', 10)\r\n          .attr('text-anchor', 'middle')\r\n          .text((d: Date) => formatDate(d));\r\n\r\n    // handle on the slider\r\n    this.handle = selector\r\n      .insert('circle', '.track-overlay')\r\n        .attr('class', 'handle')\r\n        .attr('r', this.props.handleRadius)\r\n        .attr('cx', this.timeScale(this.props.endDate));\r\n\r\n    // text lable on handle\r\n    this.handleText = selector\r\n      .append('text')\r\n      .attr('class', 'handleText')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('x', this.timeScale(this.props.endDate))\r\n      .text(formatDate(this.props.endDate))\r\n      .attr('transform', `translate(0, ${this.props.handleTextOffset})`);\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"DateSlider\" />;\r\n  }\r\n}\r\n","\r\nexport interface IColorLegendVerticalProps {\r\n  selector: any;\r\n  colorScale: any;\r\n  colorScaleMax: number;\r\n  onClick: any;\r\n  clickedDomain: [number, number | undefined];\r\n}\r\n\r\ninterface IGradientData {\r\n  number: number; offset: string; color: string;\r\n}\r\n\r\nexport class ColorLegendVertical {\r\n  props: IColorLegendVerticalProps;\r\n\r\n  backgroundWidth = 175;\r\n  backgroundHeight = 230;\r\n  barMargin = {top: 25, left: 15};\r\n  barWidth = 30;\r\n  barHeight = 180;\r\n  fontsize = 18;\r\n\r\n  colorLegendVerticalG: any;\r\n\r\n  constructor(props: IColorLegendVerticalProps) {\r\n    this.props = props;\r\n    this.colorLegendVerticalG = this.props.selector\r\n      .selectAll('#ColorLegendVertical').data([1]).join('g')\r\n        .attr('id', 'ColorLegendVertical');\r\n    this.background();\r\n    this.gradientLegend();\r\n    this.clickableLegend(this.props.clickedDomain);\r\n  }\r\n\r\n  background() {\r\n    this.colorLegendVerticalG\r\n      .selectAll('rect').data([null]).join('rect')\r\n        .attr('height', this.backgroundHeight)\r\n        .attr('width', this.backgroundWidth)\r\n        .attr('x', '1')\r\n        .attr('fill', 'white')\r\n        .attr('opacity', '0.7')\r\n        .attr('ry', 10);\r\n  }\r\n\r\n  gradientLegend() {\r\n    const colorScaleMax = this.props.colorScaleMax;\r\n    const colorScale = this.props.colorScale;\r\n\r\n    const gradientData: IGradientData[] = [];\r\n    const size = 10;\r\n    const offset = colorScaleMax / size;\r\n    for (let i = 0; i < size; ++ i) {\r\n      const currNum = 0 + offset * i;\r\n      gradientData.push({\r\n        number: currNum,\r\n        offset: `${currNum / colorScaleMax * 100}%`,\r\n        color: colorScale(currNum),\r\n      });\r\n    }\r\n\r\n    // gradient\r\n    const defs = this.colorLegendVerticalG.selectAll('defs').data([null]).join('defs');\r\n    const gradient = defs.selectAll('linearGradient').data([null]).join('linearGradient')\r\n      .attr('id', 'svgGradient')\r\n      .attr('x1', '0%')\r\n      .attr('x2', '0%')\r\n      .attr('y1', '0%')\r\n      .attr('y2', '100%');\r\n\r\n    gradient.selectAll('stop').data(gradientData).join('stop')\r\n      .attr('offset', (d: IGradientData) => d.offset)\r\n      .attr('stop-color', (d: IGradientData) => d.color);\r\n\r\n    // gradient scale\r\n    const rect = this.colorLegendVerticalG.selectAll('.gradient-rect').data([null]).join('rect')\r\n      .attr('class', 'gradient-rect')\r\n      .attr('fill', 'url(#svgGradient)')\r\n      .attr('transform', `translate(${this.barMargin.left}, ${this.barMargin.top})`)\r\n      .attr('width', this.barWidth)\r\n      .attr('height', this.barHeight);\r\n\r\n    // gradient scale text\r\n    this.colorLegendVerticalG.selectAll('.text0')\r\n      .data(['0']).join('text')\r\n        .attr('class', 'text0')\r\n        .attr('text-anchor', 'middle')\r\n        .text((d: string) => d)\r\n        .attr('font-size', this.fontsize)\r\n        .attr('x', this.barWidth / 2 + this.barMargin.left)\r\n        .attr('y', this.barMargin.top * 0.75);\r\n\r\n    this.colorLegendVerticalG.selectAll('.textMax')\r\n      .data([`>${colorScaleMax}`]).join('text')\r\n        .attr('class', 'textMax')\r\n        .attr('text-anchor', 'middle')\r\n        .text((d: string) => d)\r\n        .attr('font-size', this.fontsize)\r\n        .attr('x', this.barWidth / 2 + this.barMargin.left + this.fontsize / 2)\r\n        .attr('y', this.barMargin.top + this.barHeight + this.fontsize);\r\n\r\n  }\r\n\r\n  clickableLegend(clickedDomain: any) {\r\n    const colorScaleMax = this.props.colorScaleMax;\r\n    const buttonWidth = 20;\r\n    const buttonHeight = 20;\r\n    const clickableG = this.colorLegendVerticalG.selectAll('.clickable').data([null]).join('g')\r\n      .attr('class', 'clickable');\r\n\r\n    const clickableRanges = [[1, 9], [10, 99], [100, 999], [1000, 9999], [colorScaleMax, 7530000000]];\r\n    const interval = (this.backgroundHeight - this.barMargin.top * 2) / clickableRanges.length;\r\n    const ticksGroups = clickableG.selectAll('.clickable-ticks').data(clickableRanges).join('g')\r\n      .attr('class', 'clickable-ticks')\r\n      .attr('transform', (d: any, i: number) => `translate(${this.barMargin.left * 2 + this.barWidth}, ${this.barMargin.top * 1.25 + interval * i})`)\r\n      .attr('cursor', 'pointer')\r\n      .attr('opacity', (d: any) =>\r\n          (!clickedDomain || (d[0] === clickedDomain[0] && d[1] === clickedDomain[1]))\r\n          ? 1\r\n          : 0.2,\r\n        )\r\n      .on('click', (d: any) =>\r\n          this.props.onClick((clickedDomain && (d[0] === clickedDomain[0] && d[1] === clickedDomain[1])) ? null : d),\r\n        );\r\n\r\n    ticksGroups.selectAll('rect').data((d: any) => [d]).join('rect')\r\n      .attr('fill', (d: any[]) => this.props.colorScale(d[0]) )\r\n      .attr('ry', buttonWidth / 4)\r\n      .attr('width', buttonWidth)\r\n      .attr('height', buttonHeight);\r\n    ticksGroups.selectAll('text').data((d: any) => [d]).join('text')\r\n      .attr('font-size', this.fontsize)\r\n      .attr('text-anchor', 'left')\r\n      .attr('dominant-baseline', 'hanging')\r\n      .attr('transform', `translate(${buttonWidth * 1.2}, 0)`)\r\n      .text((d: any[]) => d[0] === colorScaleMax ? `>${colorScaleMax}` : `${d[0]}-${d[1]}`);\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { ColoredMap, IBasicMap } from './ColoredMap';\r\nimport { countryNameIDtable, prop } from './CountryNameIDtable';\r\nimport { DateSlider } from './DateSlider';\r\nimport { ColorLegendVertical } from './ColorLegendVertical';\r\nimport { isNullOrUndefined } from 'util';\r\nimport './CovidMap.css';\r\n// tslint:disable-next-line: no-var-requires\r\nconst topojson = require('topojson-client');\r\n\r\nexport interface IWorldData {\r\n  countryId: string;\r\n  countryGeo: any;\r\n  infected: number;\r\n}\r\n\r\nexport class CovidMap extends Component<{}, {sliderProps: any}> {\r\n  state = {\r\n    sliderProps: undefined,\r\n  };\r\n\r\n  dataDownloaded = false;\r\n\r\n  worldGeo: any;\r\n  worldCovid: Map<string, any> = new Map();\r\n  startDate: Date | undefined;\r\n  endDate: Date | undefined;\r\n\r\n  colorScaleMax = 10000;\r\n  colorScale: any;\r\n  coloredMap: any;\r\n  colorNonInfacted = '#ffffff';\r\n\r\n  // sphereColor = '#3bb9b950';\r\n  sphereColor = '#3bb9b99a';\r\n\r\n  constructor() {\r\n    super({});\r\n\r\n    this.drawBasicMapSVG.bind(this);\r\n    this.getWorldData();\r\n  }\r\n\r\n  constructWorldCovidKey(date: Date) {\r\n    return `${date.getUTCDate()}/${date.getUTCMonth() + 1}`;\r\n  }\r\n\r\n  async getWorldData() {\r\n    const [worldTopo, worldCovid]  = await Promise.all([\r\n      d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json'),\r\n      d3.csv('https://covid.ourworldindata.org/data/total_cases.csv'),\r\n    ]);\r\n\r\n    // worldGeo.id is country. worldGeo.geometry contains type Polygon and coordinates array\r\n    this.worldGeo = (topojson.feature(worldTopo, worldTopo.objects.countries)).features;\r\n\r\n    worldCovid.forEach((day: any) => {\r\n      const date = new Date(day.date);\r\n      this.worldCovid.set(this.constructWorldCovidKey(date), day);\r\n      if (isNullOrUndefined(this.startDate) || this.startDate.getTime() > date.getTime()) {\r\n        this.startDate = date;\r\n      }\r\n      if (isNullOrUndefined(this.endDate) || this.endDate.getTime() < date.getTime()) {\r\n        this.endDate = date;\r\n      }\r\n    });\r\n\r\n    this.dataDownloaded = true;\r\n    this.colorScale = this.createColorScale();\r\n    this.drawBasicMapSVG();\r\n  }\r\n\r\n  createColorScale() {\r\n    const colorScaleMax = this.colorScaleMax;\r\n    const logScale = d3.scaleLog()\r\n      .domain([1, colorScaleMax]);\r\n    const colorScale = d3.scaleSequential(\r\n        (d) => d === 0 ? this.colorNonInfacted : d3.interpolateReds(logScale(d)));\r\n    return colorScale;\r\n  }\r\n\r\n  drawBasicMapSVG() {\r\n    if (isNullOrUndefined(this.dataDownloaded)) {\r\n      return;\r\n    }\r\n\r\n    const width = 1024;\r\n    const height = 768;\r\n    const svg = d3.select('#CovidMap')\r\n      .selectAll('.svg-container').data([null]).join('div')\r\n        .classed('svg-container', true)\r\n        .selectAll('svg').data([null]).join('svg')\r\n          .classed('svg-content-responsive', true)\r\n          .attr('viewBox', `0 0 ${width} ${height}`)\r\n          .attr('preserveAspectRatio', `xMinYMin meet`);\r\n\r\n    svg\r\n      .selectAll('.title').data([null]).join('text')\r\n        .attr('class', 'title')\r\n        .text('COVID-19 Outbreak Across the World')\r\n        .attr('font-size', '1.5em')\r\n        .attr('font-family', 'sans-serif')\r\n        .attr('transform', `translate(270, 50)`);\r\n\r\n    const zoomG = svg\r\n      .selectAll('.zoom-container').data([null]).join('g')\r\n      .attr('class', 'zoom-container');\r\n\r\n    // Grouping everything in the map\r\n    const mapG = zoomG\r\n      .selectAll('.map').data([null]).join('g')\r\n        .attr('class', 'map');\r\n    const basicMapProps: IBasicMap = {\r\n      selector: mapG,\r\n      projection: d3.geoNaturalEarth1().scale(125),\r\n      worldGeo: this.worldGeo,\r\n      countryColor: this.colorNonInfacted,\r\n      sphereColor: this.sphereColor,\r\n    };\r\n    const map = new ColoredMap(basicMapProps);\r\n    this.coloredMap = map;\r\n\r\n    // draw color legend\r\n    const colorLegendG = zoomG\r\n      .selectAll('.colorLegend').data([null]).join('g')\r\n        .attr('class', 'colorLegend')\r\n        .attr('transform', 'translate(210, 270) scale(0.5, 0.5)');\r\n\r\n    let clickedDomain: any;\r\n    const onClick = (d: [number, number] | null) => {\r\n      clickedDomain = d;\r\n      map.hilightingMap(clickedDomain);\r\n      colorLegend.clickableLegend(clickedDomain);\r\n    };\r\n\r\n    const colorLegend = new ColorLegendVertical({\r\n      selector: colorLegendG,\r\n      colorScale: this.colorScale,\r\n      colorScaleMax: this.colorScaleMax,\r\n      onClick,\r\n      clickedDomain,\r\n    });\r\n\r\n    // draw slider\r\n    const sliderG = zoomG\r\n      .selectAll('.slider').data([null]).join('g')\r\n        .attr('class', 'slider')\r\n        .attr('transform', 'translate(200, 450) scale(0.5, 0.5)');\r\n    const sliderProps = {\r\n      selector: sliderG,\r\n      startDate: this.startDate as Date,\r\n      endDate: this.endDate as Date,\r\n      sliderWidth: 1200,\r\n      tickOffset: 10,\r\n      handleRadius: 10,\r\n      handleTextOffset: -20,\r\n      onSliderDragged: this.colorMapByDay.bind(this),\r\n    };\r\n\r\n    // set starting state as the latest day\r\n    this.colorMapByDay(this.endDate as Date);\r\n\r\n    // zoom\r\n    const zoom = d3\r\n      .zoom()\r\n      .scaleExtent([1, 8])\r\n      .on('zoom', () => {\r\n        zoomG.attr('transform', d3.event.transform);\r\n      });\r\n    svg.call(zoom as any); // somehow, when it is mapG.call, panning by drag became really hard\r\n\r\n    // re-render now that all datas are loaded\r\n    this.setState({\r\n      sliderProps,\r\n    });\r\n  }\r\n\r\n  colorMapByDay(date: Date) {\r\n    // change color of map everyday\r\n    const todayWorldCovid = this.worldCovid.get(this.constructWorldCovidKey(date));\r\n    if (!isNullOrUndefined(todayWorldCovid)) {\r\n      const worldData = this.combineWordGeoAndCovid(this.worldGeo, todayWorldCovid);\r\n      this.coloredMap.coloringMap(this.colorScale, worldData);\r\n    }\r\n  }\r\n\r\n  combineWordGeoAndCovid(worldGeo: any, todayWorldCovid: any): IWorldData[] {\r\n    const map = new Map<number, IWorldData>();\r\n    worldGeo.forEach((countryGeo: any) => {\r\n      map.set(countryGeo.id, {\r\n        countryId: countryGeo.id,\r\n        countryGeo,\r\n        infected: 0,\r\n      });\r\n    });\r\n\r\n    Object.keys(todayWorldCovid).forEach((country: any) => {\r\n      const id = prop(countryNameIDtable, country);\r\n      const countryData: IWorldData | undefined = map.get(id);\r\n      if (!isNullOrUndefined(countryData)) {\r\n        countryData.infected = Number(todayWorldCovid[country]);\r\n        map.set(id, countryData);\r\n      }\r\n    });\r\n    return Array.from(map.values());\r\n  }\r\n\r\n  render() {\r\n    if (!isNullOrUndefined(this.state.sliderProps)) {\r\n      const sliderProps = this.state.sliderProps as any;\r\n      return <div id=\"CovidMap\">\r\n              <DateSlider {...sliderProps} />\r\n             </ div>;\r\n    }\r\n    return <div id=\"CovidMap\"/>;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { CovidMap } from './CovidMap';\n\nReactDOM.render(\n  <div className=\"container\">\n    <div className=\"container\">\n      <CovidMap />\n    </ div>\n  </ div>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}