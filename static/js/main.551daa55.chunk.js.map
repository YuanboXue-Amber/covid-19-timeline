{"version":3,"sources":["ColoredMap.tsx","CountryNameIDtable.tsx","DateSlider.tsx","ColorLegendVertical.tsx","CovidMap.tsx","index.tsx"],"names":["ColoredMap","props","basicMapProps","pathGenerator","defaultStrokeWidth","coloredStrokeWidth","tooltipHide","tooltip","style","tooltipShow","d","text","transition","isNullOrUndefined","infected","properties","name","countryGeo","d3","pageX","pageY","this","renderBasicMap","countries","on","colorScale","worldData","selector","selectAll","data","countryId","join","attr","renderTooltip","range","projection","worldGeo","countryColor","sphereColor","mapG","type","id","countryNameIDtable","formatDate","DateSlider","timeScale","handle","handleText","playInterWidth","cursorMoving","buttonTimer","currentCursorWidth","buttonPlayColor","buttonPauseColor","initDateSlider","bind","updateDateSlider","domain","startDate","endDate","sliderWidth","clamp","buttonG","select","clearInterval","setInterval","playButtonStep","invert","h","onSliderDragged","trackOverlay","call","interrupt","x","nDays","Math","floor","getTime","nWeeks","nTicks","insert","tickOffset","ticks","handleRadius","append","handleTextOffset","Component","format","ColorLegendVertical","backgroundWidth","backgroundHeight","barMargin","top","left","barWidth","barHeight","fontsize","colorLegendVerticalG","background","clickableLegend","clickedDomain","colorScaleMax","gradientData","offset","i","currNum","push","number","color","clickableG","clickableRanges","interval","length","ticksGroups","onClick","buttonWidth","topojson","require","CovidMap","state","sliderProps","undefined","dataDownloaded","worldCovid","Map","coloredMap","colorNonInfacted","drawBasicMapSVG","getWorldData","date","getUTCDate","getUTCMonth","Promise","all","worldTopo","feature","objects","features","sort","d1","d2","date1","Date","date2","yesterdayDataPerCountry","day","country","Object","prototype","hasOwnProperty","set","constructWorldCovidKey","createColorScale","logScale","svg","classed","zoomG","scale","map","colorLegendG","colorLegend","hilightingMap","colorMapByDay","zoom","scaleExtent","transform","setState","todayWorldCovid","get","combineWordGeoAndCovid","coloringMap","forEach","keys","countryData","Number","Array","from","values","ReactDOM","render","className","document","getElementById"],"mappings":"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","file":"static/js/main.551daa55.chunk.js","sourcesContent":["import * as d3 from 'd3';\r\nimport './ColoredMap.css';\r\nimport { IWorldData } from './CovidMap';\r\nimport { isNullOrUndefined } from 'util';\r\n\r\nexport interface IBasicMap {\r\n  selector: any;\r\n  projection: any;\r\n  worldGeo: any;\r\n  countryColor: string;\r\n  sphereColor: string;\r\n  tooltip: any;\r\n}\r\n\r\nexport class ColoredMap {\r\n  basicMapProps: IBasicMap;\r\n  pathGenerator: any;\r\n\r\n  defaultStrokeWidth = '0.01px';\r\n  coloredStrokeWidth = '0.1px';\r\n\r\n  tooltipHide = (tooltip: any) => {\r\n    tooltip.style('opacity', 0);\r\n  }\r\n  tooltipShow = (tooltip: any, d: any) => {\r\n    tooltip\r\n      .transition()\r\n      .style('opacity', 1);\r\n    let text;\r\n    if (!isNullOrUndefined(d.infected)) {\r\n      text = `${d.countryGeo.properties.name}: ${d.infected}`;\r\n    } else {\r\n      text = d.properties.name;\r\n    }\r\n    tooltip\r\n      .style('left', d3.event.pageX + 'px')\r\n      .style('top', d3.event.pageY + 'px')\r\n      .text(text);\r\n  }\r\n\r\n  constructor(props: IBasicMap) {\r\n    this.basicMapProps = props;\r\n    this.renderBasicMap(this.basicMapProps);\r\n  }\r\n\r\n  renderTooltip(countries: any) {\r\n    const tooltip = this.basicMapProps.tooltip;\r\n    countries\r\n      .on('click', (d: any) => {\r\n        this.tooltipShow(tooltip, d);\r\n      })\r\n      .on('mouseover', (d: any) => {\r\n        this.tooltipShow(tooltip, d);\r\n      })\r\n      .on('mouseout',  (d: any) => {\r\n        this.tooltipHide(tooltip);\r\n      });\r\n  }\r\n\r\n  coloringMap(colorScale: any, worldData: IWorldData[]) {\r\n    const mapG = this.basicMapProps.selector;\r\n\r\n    const countries = mapG\r\n      .selectAll('.country')\r\n      .data(worldData, (d: IWorldData) => d.countryId)\r\n      .join('path')\r\n        .attr('class', 'country')\r\n        .attr('d', (d: IWorldData) => this.pathGenerator(d.countryGeo))\r\n        .attr('fill', (d: IWorldData) => colorScale(d.infected))\r\n        .attr('stroke-width', (d: IWorldData) => d.infected === 0 ? this.defaultStrokeWidth : this.coloredStrokeWidth);\r\n\r\n    this.renderTooltip(countries);\r\n  }\r\n\r\n  hilightingMap( range: [number, number] | null) {\r\n    const mapG = this.basicMapProps.selector;\r\n\r\n    // eslint-disable-next-line\r\n    const countries = mapG.selectAll('.country')\r\n      .attr('opacity', (d: IWorldData) => {\r\n        if (range === null) {\r\n          return 1;\r\n        }\r\n        if (d.infected >= range[0] && d.infected <= range[1]) {\r\n          return 1;\r\n        } else {\r\n          return 0.2;\r\n        }\r\n      });\r\n  }\r\n\r\n  renderBasicMap(props: IBasicMap) {\r\n    const {selector, projection, worldGeo, countryColor, sphereColor} = props;\r\n\r\n    // map generator\r\n    const pathGenerator = d3.geoPath(projection);\r\n    this.pathGenerator = pathGenerator;\r\n\r\n    // draw sphere to the map\r\n    const mapG = selector;\r\n    mapG.selectAll('.sphere').data([null]).join('path')\r\n      .attr('class', 'sphere')\r\n      .attr('d', (d: any) => pathGenerator({ type: 'Sphere' }))\r\n      .attr('fill', sphereColor);\r\n\r\n    const countries = mapG.selectAll('.country').data(worldGeo, (d: any) => d.id).join('path')\r\n      .attr('class', 'country')\r\n      .attr('d', (d: any) => pathGenerator(d))\r\n      .attr('fill', countryColor)\r\n      .attr('stroke-width', this.defaultStrokeWidth);\r\n\r\n    this.renderTooltip(countries);\r\n\r\n    return mapG;\r\n  }\r\n\r\n}\r\n","export const countryNameIDtable = {\n  'Afghanistan': '004',\n  'Albania': '008',\n  'Algeria': '012',\n  'Andorra': '020',\n  'Angola': '024',\n  'Anguilla': '660',\n  'Antigua and Barbuda': '028',\n  'Argentina': '032',\n  'Armenia': '051',\n  'Aruba': '533',\n  'Australia': '036',\n  'Austria': '040',\n  'Azerbaijan': '031',\n  'Bahamas': '044',\n  'Bahrain': '048',\n  'Bangladesh': '050',\n  'Barbados': '052',\n  'Belarus': '112',\n  'Belgium': '056',\n  'Belize': '084',\n  'Benin': '204',\n  'Bermuda': '060',\n  'Bhutan': '064',\n  'Bolivia': '068',\n  'Bonaire Sint Eustatius and Saba': null,\n  'Bosnia and Herzegovina': '070',\n  'Botswana': '072',\n  'Brazil': '076',\n  'British Virgin Islands': '092',\n  'Brunei': '096',\n  'Bulgaria': '100',\n  'Burkina Faso': '854',\n  'Burundi': '108',\n  'Cambodia': '116',\n  'Cameroon': '120',\n  'Canada': '124',\n  'Cape Verde': '132',\n  'Cayman Islands': '136',\n  'Central African Republic': '140',\n  'Chad': '148',\n  'Chile': '152',\n  'China': '156',\n  'Colombia': '170',\n  'Congo': '178',\n  'Costa Rica': '188',\n  'Cote d\\'Ivoire': '384',\n  'Croatia': '191',\n  'Cuba': '192',\n  'Curacao': '531',\n  'Cyprus': '196',\n  'Czech Republic': '203',\n  'Democratic Republic of Congo': '180',\n  'Denmark': '208',\n  'Djibouti': '262',\n  'Dominica': '212',\n  'Dominican Republic': '214',\n  'Ecuador': '218',\n  'Egypt': '818',\n  'El Salvador': '222',\n  'Equatorial Guinea': '226',\n  'Eritrea': '232',\n  'Estonia': '233',\n  'Ethiopia': '231',\n  'Faeroe Islands': '234',\n  'Falkland Islands': '238',\n  'Fiji': '242',\n  'Finland': '246',\n  'France': '250',\n  'French Polynesia': '258',\n  'Gabon': '266',\n  'Gambia': '270',\n  'Georgia': '268',\n  'Germany': '276',\n  'Ghana': '288',\n  'Gibraltar': null,\n  'Greece': '300',\n  'Greenland': '304',\n  'Grenada': '308',\n  'Guam': '316',\n  'Guatemala': '320',\n  'Guernsey': '831',\n  'Guinea': '324',\n  'Guinea-Bissau': '624',\n  'Guyana': '328',\n  'Haiti': '332',\n  'Honduras': '340',\n  'Hungary': '348',\n  'Iceland': '352',\n  'India': '356',\n  'Indonesia': '360',\n  'Iran': '364',\n  'Iraq': '368',\n  'Ireland': '372',\n  'Isle of Man': '833',\n  'Israel': '376',\n  'Italy': '380',\n  'Jamaica': '388',\n  'Japan': '392',\n  'Jersey': '832',\n  'Jordan': '400',\n  'Kazakhstan': '398',\n  'Kenya': '404',\n  'Kosovo': null,\n  'Kuwait': '414',\n  'Kyrgyzstan': '417',\n  'Laos': '418',\n  'Latvia': '428',\n  'Lebanon': '422',\n  'Liberia': '430',\n  'Libya': '434',\n  'Liechtenstein': '438',\n  'Lithuania': '440',\n  'Luxembourg': '442',\n  'Macedonia': '807',\n  'Madagascar': '450',\n  'Malawi': '454',\n  'Malaysia': '458',\n  'Maldives': '462',\n  'Mali': '466',\n  'Malta': '470',\n  'Mauritania': '478',\n  'Mauritius': '480',\n  'Mexico': '484',\n  'Moldova': '498',\n  'Monaco': '492',\n  'Mongolia': '496',\n  'Montenegro': '499',\n  'Montserrat': '500',\n  'Morocco': '504',\n  'Mozambique': '508',\n  'Myanmar': '104',\n  'Namibia': '516',\n  'Nepal': '524',\n  'Netherlands': '528',\n  'New Caledonia': '540',\n  'New Zealand': '554',\n  'Nicaragua': '558',\n  'Niger': '562',\n  'Nigeria': '566',\n  'Northern Mariana Islands': '580',\n  'Norway': '578',\n  'Oman': '512',\n  'Pakistan': '586',\n  'Palestine': '275',\n  'Panama': '591',\n  'Papua New Guinea': '598',\n  'Paraguay': '600',\n  'Peru': '604',\n  'Philippines': '608',\n  'Poland': '616',\n  'Portugal': '620',\n  'Puerto Rico': '630',\n  'Qatar': '634',\n  'Romania': '642',\n  'Russia': '643',\n  'Rwanda': '646',\n  'Saint Kitts and Nevis': '659',\n  'Saint Lucia': '662',\n  'Saint Vincent and the Grenadines': '670',\n  'San Marino': '674',\n  'Sao Tome and Principe': '678',\n  'Saudi Arabia': '682',\n  'Senegal': '686',\n  'Serbia': '688',\n  'Seychelles': '690',\n  'Sierra Leone': '694',\n  'Singapore': '702',\n  'Sint Maarten (Dutch part)': '534',\n  'Slovakia': '703',\n  'Slovenia': '705',\n  'Somalia': '706',\n  'South Africa': '710',\n  'South Korea': '410',\n  'South Sudan': '728',\n  'Spain': '724',\n  'Sri Lanka': '144',\n  'Sudan': '729',\n  'Suriname': '740',\n  'Swaziland': '748',\n  'Sweden': '752',\n  'Switzerland': '756',\n  'Syria': '760',\n  'Taiwan': '158',\n  'Tanzania': '834',\n  'Thailand': '764',\n  'Timor': '626',\n  'Togo': '768',\n  'Trinidad and Tobago': '780',\n  'Tunisia': '788',\n  'Turkey': '792',\n  'Turks and Caicos Islands': '796',\n  'Uganda': '800',\n  'Ukraine': '804',\n  'United Arab Emirates': '784',\n  'United Kingdom': '826',\n  'United States': '840',\n  'United States Virgin Islands': '850',\n  'Uruguay': '858',\n  'Uzbekistan': '860',\n  'Vatican': '336',\n  'Venezuela': '862',\n  'Vietnam': '704',\n  'Yemen': '887',\n  'Zambia': '894',\n  'Zimbabwe': '716',\n\n  'Western Sahara': '732',\n  'French Southern and Antarctic Lands': '260',\n  'Lesotho': '426',\n  'Vanuatu': '548',\n  'North Korea': '408',\n  'Tajikistan': '762',\n  'Turkmenistan': '795',\n  'Solomon Island': '090',\n  'Antarctica': '010',\n  'Micronesia': '583',\n  'Marshall Is.': '584',\n  'American Samoa': '016',\n  'S. Geo. and the Is.': '239',\n  'Br. Indian Ocean Ter.': '086',\n  'Saint Helena': '654',\n  'Pitcairn Is.': '612',\n  'Tonga': '776',\n  'Samoa': '882',\n  'Palau': '585',\n  'Niue': '570',\n  'Cook Is.': '184',\n  'Kiribati': '296',\n  'St. Pierre and Miquelon': '666',\n  'Wallis and Futuna Is.': '876',\n  'St-Martin': '663',\n  'St-Barthélemy': '652',\n  'Åland': '248',\n  'Comoros': '174',\n  'Macao': '446',\n  'Hong Kong': '344',\n  'Heard I. and McDonald Is.': '334',\n  'Norfolk Island': '574',\n};\n\nexport function prop<T, K extends keyof T>(obj: T, key: K) {\n  return obj[key];\n}\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './DateSlider.css';\r\n\r\nconst formatDate = d3.timeFormat('%d %b');\r\n\r\nexport interface IDateSliderProps {\r\n  selector: any;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  sliderWidth: number;\r\n  tickOffset: number;\r\n  handleRadius: number;\r\n  handleTextOffset: number;\r\n  onSliderDragged: (date: Date) => void;\r\n}\r\n\r\nexport class DateSlider extends Component<IDateSliderProps, {}>  {\r\n  // used by slider\r\n  timeScale: any;\r\n  handle: any;\r\n  handleText: any;\r\n\r\n  // used by play button\r\n  playInterWidth: any;\r\n  cursorMoving = false;\r\n  buttonTimer: any;\r\n  currentCursorWidth = 0;\r\n\r\n  buttonPlayColor = '#cb1c1ede';\r\n  buttonPauseColor = '#696969';\r\n\r\n  constructor(props: Readonly<IDateSliderProps>) {\r\n    super(props);\r\n\r\n    this.initDateSlider.bind(this);\r\n    this.updateDateSlider.bind(this);\r\n\r\n    const timeScale = d3\r\n      .scaleTime()\r\n      .domain([this.props.startDate, this.props.endDate])\r\n      .range([0, this.props.sliderWidth])\r\n      .clamp(true);\r\n    this.timeScale = timeScale;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const buttonG = this.props.selector\r\n      .selectAll('.button').data([null]).join('g')\r\n        .attr('class', 'button');\r\n    buttonG\r\n      .selectAll('rect').data([null]).join('rect')\r\n        .attr('height', '50')\r\n        .attr('width', '120')\r\n        .attr('x', '0')\r\n        .attr('y', '0')\r\n        .attr('rx', '10')\r\n        .attr('transform', 'translate(-150, -30)')\r\n        .attr('fill', this.buttonPlayColor);\r\n    buttonG\r\n      .selectAll('text').data([null]).join('text')\r\n        .attr('fill', 'white')\r\n        .attr('transform', 'translate(-90, 5)')\r\n        .style('text-anchor', 'middle')\r\n        .text('Play');\r\n\r\n    buttonG\r\n      .on('mouseover', () => {\r\n        buttonG.select('rect').transition().attr('fill', this.buttonPauseColor);\r\n      })\r\n      .on('mouseout', () => {\r\n        if (buttonG.text() === 'Play') {\r\n          buttonG.select('rect').transition().attr('fill', this.buttonPlayColor);\r\n        }\r\n      });\r\n\r\n    buttonG.on('click', () => {\r\n      if (buttonG.text() === 'Pause') {\r\n        this.cursorMoving = false;\r\n        clearInterval(this.buttonTimer);\r\n        buttonG.select('rect').transition().attr('fill', this.buttonPlayColor);\r\n        buttonG.select('text').transition().text('Play');\r\n      } else {\r\n        this.cursorMoving = true;\r\n        this.buttonTimer = setInterval(playButtonStep, 100);\r\n        buttonG.select('rect').transition().attr('fill', this.buttonPauseColor);\r\n        buttonG.select('text').transition().text('Pause');\r\n      }\r\n    });\r\n\r\n    const playButtonStep = () => {\r\n      this.updateDateSlider(this.timeScale.invert(this.currentCursorWidth));\r\n      this.currentCursorWidth += this.playInterWidth; // move 1 day per step\r\n      if (this.currentCursorWidth > this.props.sliderWidth + this.playInterWidth) {\r\n        this.cursorMoving = false;\r\n        this.currentCursorWidth = 0;\r\n        clearInterval(this.buttonTimer);\r\n        // timer = 0;\r\n        buttonG.select('rect').transition().attr('fill', this.buttonPlayColor);\r\n        buttonG.select('text').transition().text('Play');\r\n      }\r\n    };\r\n\r\n    this.initDateSlider();\r\n  }\r\n\r\n  updateDateSlider (h: Date) {\r\n    // update position and text of label according to slider scale\r\n    this.handle\r\n      .attr('cx', this.timeScale(h));\r\n    this.handleText\r\n      .attr('x', this.timeScale(h))\r\n      .text(formatDate(h));\r\n\r\n    this.props.onSliderDragged(h);\r\n  }\r\n\r\n  initDateSlider () {\r\n    const selector = this.props.selector;\r\n\r\n    selector.selectAll('.track').data([null]).join('line')\r\n      .attr('class', 'track');\r\n    selector.selectAll('.track-inset').data([null]).join('line')\r\n      .attr('class', 'track-inset');\r\n    const trackOverlay = selector.selectAll('.track-overlay').data([null]).join('line')\r\n      .attr('class', 'track-overlay');\r\n    selector.selectAll('line')\r\n      .attr('x1', this.timeScale.range()[0])\r\n      .attr('x2', this.timeScale.range()[1]);\r\n\r\n    trackOverlay.call(\r\n      d3.drag()\r\n        .on('start.interrupt', () => selector.interrupt())\r\n        .on('start drag', () => {\r\n          this.currentCursorWidth = d3.event.x;\r\n          this.updateDateSlider(this.timeScale.invert(this.currentCursorWidth));\r\n        }),\r\n    );\r\n\r\n    // draw ticks, one per week, no more than 15 ticks\r\n    const nDays = Math.floor((this.props.endDate.getTime() - this.props.startDate.getTime())\r\n      / (1000 * 60 * 60 * 24));\r\n    const nWeeks = Math.floor(nDays/7);\r\n    const nTicks = nWeeks > 15 ? 15 : nWeeks;\r\n    this.playInterWidth = this.props.sliderWidth / ((nDays + 1));\r\n    selector\r\n      .insert('g', '.track-overlay')\r\n        .attr('class', 'ticks')\r\n        .attr('transform', `translate(0, ${this.props.tickOffset})`)\r\n        .selectAll('text')\r\n        .data(this.timeScale.ticks(nTicks))\r\n        .join('text')\r\n          .attr('x', this.timeScale)\r\n          .attr('y', 10)\r\n          .attr('text-anchor', 'middle')\r\n          .text((d: Date) => formatDate(d));\r\n\r\n    // handle on the slider\r\n    this.handle = selector\r\n      .insert('circle', '.track-overlay')\r\n        .attr('class', 'handle')\r\n        .attr('r', this.props.handleRadius)\r\n        .attr('cx', this.timeScale(this.props.endDate));\r\n\r\n    // text lable on handle\r\n    this.handleText = selector\r\n      .append('text')\r\n      .attr('class', 'handleText')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('x', this.timeScale(this.props.endDate))\r\n      .text(formatDate(this.props.endDate))\r\n      .attr('transform', `translate(0, ${this.props.handleTextOffset})`);\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"DateSlider\" />;\r\n  }\r\n}\r\n","import * as d3 from 'd3';\r\n\r\nexport interface IColorLegendVerticalProps {\r\n  selector: any;\r\n  colorScale: any;\r\n  colorScaleMax: number;\r\n  onClick: any;\r\n  clickedDomain: [number, number | undefined];\r\n}\r\n\r\ninterface IGradientData {\r\n  number: number; offset: string; color: string;\r\n}\r\n\r\nconst format = d3.format(',d');\r\n\r\nexport class ColorLegendVertical {\r\n  props: IColorLegendVerticalProps;\r\n\r\n  backgroundWidth = 160;\r\n  backgroundHeight = 250;\r\n  barMargin = {top: 25, left: 15};\r\n  barWidth = 30;\r\n  barHeight = 200;\r\n  fontsize = 18;\r\n\r\n  colorLegendVerticalG: any;\r\n\r\n  constructor(props: IColorLegendVerticalProps) {\r\n    this.props = props;\r\n    this.colorLegendVerticalG = this.props.selector\r\n      .selectAll('#ColorLegendVertical').data([1]).join('g')\r\n        .attr('id', 'ColorLegendVertical');\r\n    this.background();\r\n    // this.gradientLegend();\r\n    this.clickableLegend(this.props.clickedDomain);\r\n  }\r\n\r\n  background() {\r\n    this.colorLegendVerticalG\r\n      .selectAll('rect').data([null]).join('rect')\r\n        .attr('height', this.backgroundHeight)\r\n        .attr('width', this.backgroundWidth)\r\n        .attr('x', '1')\r\n        .attr('fill', 'white')\r\n        .attr('opacity', '0.7')\r\n        .attr('ry', 10);\r\n  }\r\n\r\n  gradientLegend() {\r\n    const colorScaleMax = this.props.colorScaleMax;\r\n    const colorScale = this.props.colorScale;\r\n\r\n    const gradientData: IGradientData[] = [];\r\n    const size = 10;\r\n    const offset = colorScaleMax / size;\r\n    for (let i = 0; i < size; ++ i) {\r\n      const currNum = 0 + offset * i;\r\n      gradientData.push({\r\n        number: currNum,\r\n        offset: `${currNum / colorScaleMax * 100}%`,\r\n        color: colorScale(currNum),\r\n      });\r\n    }\r\n\r\n    // gradient\r\n    const defs = this.colorLegendVerticalG.selectAll('defs').data([null]).join('defs');\r\n    const gradient = defs.selectAll('linearGradient').data([null]).join('linearGradient')\r\n      .attr('id', 'svgGradient')\r\n      .attr('x1', '0%')\r\n      .attr('x2', '0%')\r\n      .attr('y1', '0%')\r\n      .attr('y2', '100%');\r\n\r\n    gradient.selectAll('stop').data(gradientData).join('stop')\r\n      .attr('offset', (d: IGradientData) => d.offset)\r\n      .attr('stop-color', (d: IGradientData) => d.color);\r\n\r\n    // gradient scale\r\n    // eslint-disable-next-line\r\n    const rect = this.colorLegendVerticalG.selectAll('.gradient-rect').data([null]).join('rect')\r\n      .attr('class', 'gradient-rect')\r\n      .attr('fill', 'url(#svgGradient)')\r\n      .attr('transform', `translate(${this.barMargin.left}, ${this.barMargin.top})`)\r\n      .attr('width', this.barWidth)\r\n      .attr('height', this.barHeight);\r\n\r\n    // gradient scale text\r\n    this.colorLegendVerticalG.selectAll('.text0')\r\n      .data(['0']).join('text')\r\n        .attr('class', 'text0')\r\n        .attr('text-anchor', 'middle')\r\n        .text((d: string) => d)\r\n        .attr('font-size', this.fontsize)\r\n        .attr('x', this.barWidth / 2 + this.barMargin.left)\r\n        .attr('y', this.barMargin.top * 0.75);\r\n\r\n    this.colorLegendVerticalG.selectAll('.textMax')\r\n      .data([`>${format(colorScaleMax)}`]).join('text')\r\n        .attr('class', 'textMax')\r\n        .attr('text-anchor', 'middle')\r\n        .text((d: string) => d)\r\n        .attr('font-size', this.fontsize)\r\n        .attr('x', this.barWidth / 2 + this.barMargin.left + this.fontsize / 2)\r\n        .attr('y', this.barMargin.top + this.barHeight + this.fontsize);\r\n\r\n  }\r\n\r\n  clickableLegend(clickedDomain: any) {\r\n    const colorScaleMax = this.props.colorScaleMax;\r\n    const buttonWidth = 20;\r\n    const buttonHeight = 20;\r\n    const clickableG = this.colorLegendVerticalG.selectAll('.clickable').data([null]).join('g')\r\n      .attr('class', 'clickable');\r\n\r\n    const clickableRanges = [\r\n      [1, 9], [10, 99], [100, 999], [1000, 4999], [5000, 9999],\r\n      [10000, 50000 - 1], [50000, colorScaleMax - 1], [colorScaleMax, 7530000000]];\r\n    // const interval = (this.backgroundHeight - this.barMargin.top * 2) / clickableRanges.length;\r\n    const interval = (this.backgroundHeight - this.fontsize) / clickableRanges.length;\r\n    const ticksGroups = clickableG.selectAll('.clickable-ticks').data(clickableRanges).join('g')\r\n      .attr('class', 'clickable-ticks')\r\n      // tslint:disable-next-line: max-line-length\r\n      // .attr('transform', (d: any, i: number) => `translate(${this.barMargin.left * 2 + this.barWidth}, ${this.barMargin.top * 1.25 + interval * i})`)\r\n      .attr('transform', (d: any, i: number) => `translate(${this.fontsize}, ${this.fontsize + interval * i})`)\r\n      .attr('cursor', 'pointer')\r\n      .attr('opacity', (d: any) =>\r\n          (!clickedDomain || (d[0] === clickedDomain[0] && d[1] === clickedDomain[1]))\r\n          ? 1\r\n          : 0.2,\r\n        )\r\n      .on('click', (d: any) =>\r\n          this.props.onClick((clickedDomain && (d[0] === clickedDomain[0] && d[1] === clickedDomain[1])) ? null : d),\r\n        );\r\n\r\n    ticksGroups.selectAll('rect').data((d: any) => [d]).join('rect')\r\n      .attr('fill', (d: any[]) => this.props.colorScale(d[0]) )\r\n      .attr('ry', buttonWidth / 4)\r\n      .attr('width', buttonWidth)\r\n      .attr('height', buttonHeight);\r\n    ticksGroups.selectAll('text').data((d: any) => [d]).join('text')\r\n      .attr('font-size', this.fontsize)\r\n      .attr('text-anchor', 'left')\r\n      .attr('dominant-baseline', 'hanging')\r\n      .attr('transform', `translate(${buttonWidth * 1.2}, 0)`)\r\n      .text((d: any[]) => d[0] === colorScaleMax ? `>${format(colorScaleMax)}` : `${format(d[0])}-${format(d[1])}`);\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { ColoredMap, IBasicMap } from './ColoredMap';\r\nimport { countryNameIDtable, prop } from './CountryNameIDtable';\r\nimport { DateSlider } from './DateSlider';\r\nimport { ColorLegendVertical } from './ColorLegendVertical';\r\nimport { isNullOrUndefined } from 'util';\r\nimport './CovidMap.css';\r\n// tslint:disable-next-line: no-var-requires\r\nconst topojson = require('topojson-client');\r\n\r\nexport interface IWorldData {\r\n  countryId: string;\r\n  countryGeo: any;\r\n  infected: number;\r\n}\r\n\r\nexport class CovidMap extends Component<{}, {sliderProps: any}> {\r\n  state = {\r\n    sliderProps: undefined,\r\n  };\r\n\r\n  dataDownloaded = false;\r\n\r\n  worldGeo: any;\r\n  worldCovid: Map<string, any> = new Map();\r\n  startDate: Date | undefined;\r\n  endDate: Date | undefined;\r\n\r\n  colorScaleMax = 100000;\r\n  colorScale: any;\r\n  coloredMap: any;\r\n  colorNonInfacted = '#ffffff';\r\n\r\n  // sphereColor = '#3bb9b950';\r\n  sphereColor = '#3bb9b99a';\r\n\r\n  constructor() {\r\n    super({});\r\n\r\n    this.drawBasicMapSVG.bind(this);\r\n    this.getWorldData();\r\n  }\r\n\r\n  constructWorldCovidKey(date: Date) {\r\n    return `${date.getUTCDate()}/${date.getUTCMonth() + 1}`;\r\n  }\r\n\r\n  async getWorldData() {\r\n    const [worldTopo, worldCovid]  = await Promise.all([\r\n      d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-50m.json'),\r\n      d3.csv('https://covid.ourworldindata.org/data/ecdc/total_cases.csv'),\r\n    ]);\r\n\r\n    // worldGeo.id is country. worldGeo.geometry contains type Polygon and coordinates array\r\n    this.worldGeo = (topojson.feature(worldTopo, worldTopo.objects.countries)).features;\r\n\r\n    // ---- Tools to generate countryNameIDtable\r\n    // let mymap = new Map();\r\n    // this.worldGeo.forEach((country: any) => {\r\n    //   mymap.set(country.properties.name, country.id)\r\n    // });\r\n    // let out = \"\";\r\n    // mymap.forEach((value, key) => { out += `\"${key}\": \"${value}\",\\n`} )\r\n    // // console.log(out) // worldgeo countryname and id\r\n\r\n    // // check which country is in worldGeo but not in countryNameIDtable\r\n    // mymap = new Map();\r\n    // out = \"\";\r\n    // this.worldGeo.forEach((country: any) => {\r\n    //   if (!prop(countryNameIDtable, country.properties.name)) {\r\n    //     out += `\"${country.properties.name}\": \"${country.id}\",\\n`\r\n    //   }\r\n    // });\r\n    // console.log(out)\r\n\r\n    // let countryNameMap = new Map();\r\n    // Object.keys(worldCovid[0]).forEach((country: any) => {\r\n    //   countryNameMap.set(country, mymap.get(country))\r\n    // });\r\n    // out = \"\";\r\n    // countryNameMap.forEach((value, key) => { out += `\"${key}\": \"${value}\",\\n`} )\r\n    // console.log(out) // world covid country name, and id from worldgeo\r\n\r\n    // ---- Tools end\r\n\r\n    worldCovid.sort((d1: any, d2: any) => {\r\n      const date1 = new Date(d1.date);\r\n      const date2 = new Date(d2.date);\r\n      return date1.getTime() - date2.getTime();\r\n    });\r\n    this.startDate = new Date(worldCovid[0].date);\r\n    this.endDate = new Date(worldCovid[worldCovid.length - 1].date);\r\n\r\n    let yesterdayDataPerCountry: any = null;\r\n    for (const day of worldCovid) {\r\n      // iterate through each country to fill in blank data\r\n      for (const country in day) {\r\n        if (Object.prototype.hasOwnProperty.call(day, country)) {\r\n          if (country === 'date') { continue; }\r\n          const infected = day[country];\r\n          if (infected === '') {\r\n            // no data for today, check yesterday\r\n            if (yesterdayDataPerCountry === null) {\r\n              day[country] = 0;\r\n            } else {\r\n              day[country] = yesterdayDataPerCountry[country];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      const date = new Date(day.date);\r\n      this.worldCovid.set(this.constructWorldCovidKey(date), day);\r\n      yesterdayDataPerCountry = day;\r\n    }\r\n\r\n    this.dataDownloaded = true;\r\n    this.colorScale = this.createColorScale();\r\n    this.drawBasicMapSVG();\r\n  }\r\n\r\n  createColorScale() {\r\n    const colorScaleMax = this.colorScaleMax;\r\n    const logScale = d3.scaleLog()\r\n      .domain([1, colorScaleMax]);\r\n    const colorScale = d3.scaleSequential(\r\n        (d) => d === 0 ? this.colorNonInfacted : (d >= colorScaleMax ? '#4d0000' : d3.interpolateYlOrRd(logScale(d))) );\r\n    return colorScale;\r\n  }\r\n\r\n  drawBasicMapSVG() {\r\n    if (isNullOrUndefined(this.dataDownloaded)) {\r\n      return;\r\n    }\r\n\r\n    const width = 1024;\r\n    const height = 768;\r\n    const svg = d3.select('#CovidMap')\r\n      .selectAll('.svg-container').data([null]).join('div')\r\n        .classed('svg-container', true)\r\n        .selectAll('svg').data([null]).join('svg')\r\n          .classed('svg-content-responsive', true)\r\n          .attr('viewBox', `0 0 ${width} ${height}`)\r\n          .attr('preserveAspectRatio', `xMinYMin meet`);\r\n\r\n    const zoomG = svg\r\n      .selectAll('.zoom-container').data([null]).join('g')\r\n      .attr('class', 'zoom-container');\r\n\r\n    zoomG\r\n      .selectAll('.title').data([null]).join('text')\r\n        .attr('class', 'title')\r\n        .text('COVID-19 Outbreak Across the World')\r\n        .attr('font-size', '1.5em')\r\n        .attr('font-family', 'sans-serif')\r\n        .attr('transform', `translate(270, 50)`);\r\n\r\n    const tooltip = d3.select('#CovidMap').selectAll('.country-tooltip').data([null]).join('div')\r\n      .attr('class', 'country-tooltip')\r\n      .style('opacity', 0);\r\n\r\n    // Grouping everything in the map\r\n    const mapG = zoomG\r\n      .selectAll('.map').data([null]).join('g')\r\n        .attr('class', 'map');\r\n    const basicMapProps: IBasicMap = {\r\n      selector: mapG,\r\n      projection: d3.geoNaturalEarth1().scale(125),\r\n      worldGeo: this.worldGeo,\r\n      countryColor: this.colorNonInfacted,\r\n      sphereColor: this.sphereColor,\r\n      tooltip,\r\n    };\r\n    const map = new ColoredMap(basicMapProps);\r\n    this.coloredMap = map;\r\n\r\n    // draw color legend\r\n    const colorLegendG = zoomG\r\n      .selectAll('.colorLegend').data([null]).join('g')\r\n        .attr('class', 'colorLegend')\r\n        .attr('transform', 'translate(210, 260) scale(0.5, 0.5)');\r\n\r\n    let clickedDomain: any;\r\n    const onClick = (d: [number, number] | null) => {\r\n      clickedDomain = d;\r\n      map.hilightingMap(clickedDomain);\r\n      colorLegend.clickableLegend(clickedDomain);\r\n    };\r\n\r\n    const colorLegend = new ColorLegendVertical({\r\n      selector: colorLegendG,\r\n      colorScale: this.colorScale,\r\n      colorScaleMax: this.colorScaleMax,\r\n      onClick,\r\n      clickedDomain,\r\n    });\r\n\r\n    // draw slider\r\n    const sliderG = zoomG\r\n      .selectAll('.slider').data([null]).join('g')\r\n        .attr('class', 'slider')\r\n        .attr('transform', 'translate(200, 450) scale(0.5, 0.5)');\r\n    const sliderProps = {\r\n      selector: sliderG,\r\n      startDate: this.startDate as Date,\r\n      endDate: this.endDate as Date,\r\n      sliderWidth: 1200,\r\n      tickOffset: 10,\r\n      handleRadius: 10,\r\n      handleTextOffset: -20,\r\n      onSliderDragged: this.colorMapByDay.bind(this),\r\n    };\r\n\r\n    // set starting state as the latest day\r\n    this.colorMapByDay(this.endDate as Date);\r\n\r\n    // zoom\r\n    const zoom = d3\r\n      .zoom()\r\n      .scaleExtent([1, 8])\r\n      .on('zoom', () => {\r\n        zoomG.attr('transform', d3.event.transform);\r\n      });\r\n    svg.call(zoom as any); // somehow, when it is mapG.call, panning by drag became really hard\r\n\r\n    // re-render now that all datas are loaded\r\n    this.setState({\r\n      sliderProps,\r\n    });\r\n  }\r\n\r\n  colorMapByDay(date: Date) {\r\n    // change color of map everyday\r\n    const todayWorldCovid = this.worldCovid.get(this.constructWorldCovidKey(date));\r\n    if (!isNullOrUndefined(todayWorldCovid)) {\r\n      const worldData = this.combineWordGeoAndCovid(this.worldGeo, todayWorldCovid);\r\n      this.coloredMap.coloringMap(this.colorScale, worldData);\r\n    }\r\n  }\r\n\r\n  combineWordGeoAndCovid(worldGeo: any, todayWorldCovid: any): IWorldData[] {\r\n    const map = new Map<number, IWorldData>();\r\n    worldGeo.forEach((countryGeo: any) => {\r\n      map.set(countryGeo.id, {\r\n        countryId: countryGeo.id,\r\n        countryGeo,\r\n        infected: 0,\r\n      });\r\n    });\r\n\r\n    Object.keys(todayWorldCovid).forEach((country: any) => {\r\n      const id = prop(countryNameIDtable, country);\r\n      if (!isNullOrUndefined(id)) {\r\n        const countryData: IWorldData | undefined = map.get(id);\r\n        if (!isNullOrUndefined(countryData)) {\r\n          countryData.infected = Number(todayWorldCovid[country]);\r\n          map.set(id, countryData);\r\n        }\r\n      }\r\n    });\r\n    return Array.from(map.values());\r\n  }\r\n\r\n  render() {\r\n    if (!isNullOrUndefined(this.state.sliderProps)) {\r\n      const sliderProps = this.state.sliderProps as any;\r\n      return <div id=\"CovidMap\">\r\n              <DateSlider {...sliderProps} />\r\n             </ div>;\r\n    }\r\n    return <div id=\"CovidMap\"/>;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { CovidMap } from './CovidMap';\n\nReactDOM.render(\n  <div className=\"container\">\n    <div className=\"container\">\n      <CovidMap />\n    </ div>\n  </ div>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}